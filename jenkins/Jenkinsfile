pipeline{
    agent any
    environment{
        registry="namrata99/vote" 
        dockerImage=""  
        // dockertoken=credentials("docker-token")
    }
    stages{
        stage('Building our image') { 
            steps { 
                script { 
                    sh 'docker build -t \${registry}:${BUILD_NUMBER}  .'
                }
            } 
        }
        stage('Deploy our image') { 
            steps { 
                script { 
                     withCredentials([string(credentialsId: 'DOCKER_SECRET', variable: 'dockerhubpwd')]) {
                   sh 'docker login -u namrata99 -p ${dockerhubpwd}'
                     }
                   sh 'docker push \${registry}:${BUILD_NUMBER}'
                   sh 'docker push \${registry}:latest'
                } 
            }
        }
        // stage('Package helm chart and push') {
        //     steps{
        //         timeout(time: 10, unit: "SECONDS") {

        //             input message: 'approve the helm push?', ok: 'Yes'

        //         }
        //         script{
        //             sh """
        //             minor_version=\$(grep 'version:' ./chart/vote/Chart.yaml | awk -F '.' '{print \$2}')
        //             new_minor_version=`expr \$minor_version + 1`
        //             cp ./chart/vote/Chart.yaml chart.yaml.tmp && sed "/^\\([[:space:]]*version: \\).*/s//\\10.\${new_minor_version}.0/" < chart.yaml.tmp >./chart/vote/Chart.yaml && rm -f chart.yaml.tmp
        //             echo \${dockertoken} | helm registry login registry-1.docker.io -u namrata1-99 --password-stdin
        //             helm package ./chart/vote/
        //             helm push helm_vote-0.\${new_minor_version}.0.tgz oci://registry-1.docker.io/namrata1-99
        //             """
        //         }
        //     }
        // }
    }
}